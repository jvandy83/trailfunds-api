###########
# BUILDER #
###########

# pull official base image
FROM python:3.9.5-slim-buster as builder

# set work directory
WORKDIR /usr/src/trailfunds

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

COPY ./requirements.txt /usr/src/trailfunds/requirements.txt
COPY ./requirements_dev.txt /usr/src/trailfunds/requirements_dev.txt
RUN pip install --upgrade pip
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/trailfunds/wheels -r requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/trailfunds/wheels_dev -r requirements_dev.txt

#########
# LINT #
#########

FROM builder as lint
WORKDIR /usr/src/trailfunds
RUN pip install flake8==3.9.1
# COPY ./src/app /usr/src/trailfunds/app
# COPY ./src/manage.py /usr/src/trailfunds/manage.py
CMD ["flake8", "--ignore=E501,F401", "."]

#########
# TEST #
#########

# FROM builder as test

# WORKDIR /usr/src/trailfunds
# # COPY ./tests /usr/src/trailfunds/tests
# # COPY ./src/app /usr/src/trailfunds/app
# # COPY ./src/manage.py /usr/src/trailfunds/manage.py

# COPY --from=builder /usr/src/trailfunds/wheels /wheels
# COPY --from=builder /usr/src/trailfunds/wheels_dev /wheels
# RUN pip install --no-cache /wheels/*

# ENV PYTHONPATH=$PYTHONPATH:./src
# CMD ["pytest", "--cov=app", "tests/"]

#########
# FINAL #
#########

# pull official base image
FROM python:3.9.5-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/backend
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/trailfunds/wheels /wheels
COPY --from=builder /usr/src/trailfunds/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME
RUN chmod +x entrypoint.prod.sh
# copy project
# COPY ./src/app $APP_HOME
# COPY ./src/manage.py $APP_HOME/manage.py
# COPY ./src/log.yaml $APP_HOME/log.yaml

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

RUN ./entrypoint.prod.sh
# ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
# CMD ["gunicorn", "--access-logfile", "'-'", "--bind", "0.0.0.0:7878", "--log-level=info", "manage:create_app()"]
